name: Run Playwright & Postman API Tests

on:
  push:
    branches: [ main ]

concurrency: production_environment

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Start containers 
        run: |
          export DISABLE_LOGGING=true
          docker compose -f docker-compose.yml up -d

      - name: Sleep for 60 seconds
        run: sleep 60s
        shell: bash

      - name: Create & Seed database 
        run: |
          docker compose exec -T laravel-api php artisan migrate:refresh --seed --force

      - name: GET Version
        run: curl -v -X GET 'http://localhost:8091/status'

      - name: POST login
        run: |
          curl -v -X POST 'http://localhost:8091/users/login' \
          -H 'Content-Type: application/json' \
          --data-raw '{"email":"customer@practicesoftwaretesting.com","password":"welcome01"}'

      - name: Install node 
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies 
        run: |
          npm ci
          PLAYWRIGHT_VERSION=$(npm ls --json @playwright/test | jq --raw-output '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright browser binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: "~/.cache/ms-playwright"
          key: "${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}"
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browser binaries & OS dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Install Playwright OS dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      - name: Run Playwright tests 
        run: npx playwright test

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman API tests 
        run: |
          newman run tests/postman/Login.postman_collection.json --iteration-data tests/postman/LoginData.csv --reporters cli
          newman run tests/postman/Admin Search User.postman_collection.json --iteration-data tests/postman/AdminSearchQueryData.csv --reporters cli
          newman run tests/postman/Add New Product.postman_collection.json --iteration-data tests/postman/NewProductData --reporters cli
