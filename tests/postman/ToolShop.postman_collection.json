{
	"info": {
		"_postman_id": "0fdbd56e-1299-493c-bb7e-33572a8f29f7",
		"name": "ToolShop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38511993"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let expected = pm.iterationData.get(\"expectedResult\"); // \"pass\" or \"fail\"\r",
									"let status = pm.response.code;\r",
									"\r",
									"pm.test(\"Status matches expected result\", function () {\r",
									"    let actual = (status === 201) ? \"pass\" : \"fail\";\r",
									"\r",
									"    if (actual !== expected) {\r",
									"        console.error(\r",
									"            `Mismatch for iteration ${pm.info.iteration + 1}: ` +\r",
									"            `Expected \"${expected}\" but got status ${status} (interpreted as \"${actual}\")`\r",
									"        );\r",
									"    }\r",
									"\r",
									"    pm.expect(actual).to.eql(expected);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"{{firstName}}\",\r\n    \"last_name\": \"{{lastName}}\",\r\n    \"dob\": \"{{DoB}}\",\r\n    \"address\": \"{{address}}\",\r\n    \"city\": \"{{city}}\",\r\n    \"state\": \"{{country}}\",\r\n    \"country\": \"{{countryCode}}\",\r\n    \"postcode\": \"{{postCode}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/register",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Brand",
			"item": [
				{
					"name": "Create Brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let expected = pm.iterationData.get(\"expectedResult\"); // \"pass\" or \"fail\"\r",
									"let status = pm.response.code;\r",
									"\r",
									"pm.test(\"Status matches expected result\", function () {\r",
									"    let actual = (status === 201) ? \"pass\" : \"fail\";\r",
									"\r",
									"    if (actual !== expected) {\r",
									"        console.error(\r",
									"            `Mismatch for iteration ${pm.info.iteration + 1}: ` +\r",
									"            `Expected \"${expected}\" but got status ${status} (interpreted as \"${actual}\")`\r",
									"        );\r",
									"    }\r",
									"\r",
									"    pm.expect(actual).to.eql(expected);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"slug\": \"{{slug}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/brands",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"brands"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let expected = pm.iterationData.get(\"expectedResult\"); // \"pass\" or \"fail\"\r",
									"let status = pm.response.code;\r",
									"\r",
									"pm.test(\"Status matches expected result\", function () {\r",
									"    let actual = (status === 201) ? \"pass\" : \"fail\";\r",
									"\r",
									"    if (actual !== expected) {\r",
									"        console.error(\r",
									"            `Mismatch for iteration ${pm.info.iteration + 1}: ` +\r",
									"            `Expected \"${expected}\" but got status ${status} (interpreted as \"${actual}\")`\r",
									"        );\r",
									"    }\r",
									"\r",
									"    pm.expect(actual).to.eql(expected);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"parent_id\": \"{{parentId}}\",\r\n    \"slug\": \"{{slug}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/categories",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"categories"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:8091",
			"type": "default"
		}
	]
}